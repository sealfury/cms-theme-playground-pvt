(function () {
  // Variables
  var nav = document.querySelector('.header__navigation');
  var langSwitcher = document.querySelector('.header__language-switcher');
  var search = document.querySelector('.header__search');
  var allToggles = document.querySelectorAll('.header--toggle');
  var navToggle = document.querySelector('.header__navigation--toggle');
  var langToggle = document.querySelector('.header__language-switcher--label');
  var searchToggle = document.querySelector('.header__search--toggle');
  var closeToggle = document.querySelector('.header__close--toggle');
  var allElements = document.querySelectorAll(
    '.header--element, .header__navigation--toggle, .header__row-2'
  );
  var emailGlobalUnsub = document.querySelector('input[name="globalunsub"]');
  var header = document.querySelector('header');
  var mobileHeader = document.querySelector('.header__container.mobile');
  var mobileLangSwitcher = mobileHeader.querySelector(
    '.header__language-switcher'
  );
  var mobileLangToggle = mobileHeader.querySelector(
    '.header__language-switcher--label'
  );
  var headerBottomRow = mobileHeader.querySelector('.header__row-2');
  var mainContent = document.querySelector('main');
  var footer = document.querySelector('footer');

  // Functions

  // Function for executing code on document ready
  function domReady(callback) {
    if (['interactive', 'complete'].indexOf(document.readyState) >= 0) {
      callback();
    } else {
      document.addEventListener('DOMContentLoaded', callback);
    }
  }

  // Function to toggle scroll class in header
  function toggleScrollClass() {
    // console.log(window.scrollY);
    if (window.innerWidth > 767) {
      if (window.scrollY > 94) {
        header.classList.add('scroll');
      }

      if (window.scrollY < 96) {
        header.classList.remove('scroll');
      }
    }
  }

  function hideContentOnToggle() {
    closeToggle.addEventListener('click', function () {
      if (this.classList.contains('show')) {
        this.classList.remove('show');
        navToggle.classList.remove('open');
        headerBottomRow.classList.remove('open');
        nav.classList.remove('open');
      }

      if (mainContent.classList.contains('hide-on-open-mobile')) {
        mainContent.classList.remove('hide-on-open-mobile');
      }

      if (footer.classList.contains('hide-on-open-mobile')) {
        footer.classList.remove('hide-on-open-mobile');
      }
    });
  }

  // Function for toggling mobile navigation
  function toggleNav() {
    nav.classList.toggle('open');
    navToggle.classList.toggle('open');
    headerBottomRow.classList.toggle('open');
    closeToggle.classList.toggle('show');

    if (window.innerWidth < 767) {
      mainContent.classList.toggle('hide-on-open-mobile');
      footer.classList.toggle('hide-on-open-mobile');
    }

    if (window.innerWidth < 767) {
      hideContentOnToggle();
    }
  }

  // Function for toggling mobile language selector
  function toggleMobileLang() {
    var globeClass = mobileLangToggle.querySelector('.globe_class');
    var langSwitcherMenu = mobileLangToggle.querySelector('.lang_list_class');
    var langSwitcherLinks = langSwitcherMenu.querySelectorAll(
      '.lang_switcher_link'
    );
    var labelCurrent = mobileLangToggle.querySelector(
      '.header__language-switcher--label-current'
    );

    // Add open class for styling and animation purposes
    var toggles = [mobileLangToggle, globeClass, langSwitcherMenu];
    toggles.forEach(function (toggle) {
      toggle.classList.toggle('open');
    });

    // Remove top list item which repeats 'label current' value
    langSwitcherLinks.forEach(function (link) {
      var labelCurrentText = labelCurrent.textContent.trim();
      if (link.textContent == labelCurrentText) {
        link.parentNode.remove();
      }
    });
  }

  function toggleLang() {
    var globeClass = langToggle.querySelector('.globe_class');
    var langSwitcherMenu = langToggle.querySelector('.lang_list_class');
    var langSwitcherLinks = langSwitcherMenu.querySelectorAll(
      '.lang_switcher_link'
    );
    var labelCurrent = langToggle.querySelector(
      '.header__language-switcher--label-current'
    );

    var toggles = [langToggle, langSwitcher, globeClass, langSwitcherMenu];
    toggles.forEach(function (toggle) {
      toggle.classList.toggle('open');
    });

    langSwitcherLinks.forEach(function (link) {
      var labelCurrentText = labelCurrent.textContent.trim();
      if (link.textContent == labelCurrentText) {
        link.parentNode.remove();
      }
    });
  }

  // Hide Hubspots autogenerated language switcher globe on translated pages
  function removeExtraLangSwitcher() {
    if (document.documentElement.lang != 'en') {
      header.querySelector('.container-fluid').remove();
    }
  }

  // Function for toggling mobile search field
  function toggleSearch() {
    allToggles.forEach(function (toggle) {
      toggle.classList.toggle('hide');
    });

    search.classList.toggle('open');
    searchToggle.classList.toggle('open');

    closeToggle.classList.toggle('show');
  }

  // Function for the header close option on mobile
  function closeAll() {
    allElements.forEach(function (element) {
      element.classList.remove('hide', 'open');
    });

    closeToggle.classList.remove('show');
  }

  // Function to disable the other checkbox inputs on the email subscription system page template
  function toggleDisabled() {
    var emailSubItem = document.querySelectorAll('#email-prefs-form .item');

    emailSubItem.forEach(function (item) {
      var emailSubItemInput = item.querySelector('input');

      if (emailGlobalUnsub.checked) {
        item.classList.add('disabled');
        emailSubItemInput.setAttribute('disabled', 'disabled');
        emailSubItemInput.checked = false;
      } else {
        item.classList.remove('disabled');
        emailSubItemInput.removeAttribute('disabled');
      }
    });
  }

  // Function to add focus ring if user is navigating with keyboard
  function handleFirstTab(e) {
    if (e.keyCode === 9) {
      document.body.classList.add('is-tabbing');
      window.removeEventListener('keydown', handleFirstTab);
    }
  }

  // Function to globally prevent addition of hsLang query strings to anchor elements
  function skipLangUrlRewrite() {
    var anchorElements = document.querySelectorAll('a');
    anchorElements.forEach(function (el) {
      if (!el.classList.contains('hs-skip-lang-url-rewrite')) {
        el.classList.add('hs-skip-lang-url-rewrite');
      }

      var href = el.getAttribute('href');
      if (href) {
        // Ensure only language query strings are clipped (not searches)
        var regex = /\?hsLang/g;
        var index = href.search(regex);

        let newHref;
        // Don't change href of anchor links using #
        if (index < 0) {
          newHref = href;
        }
        // Clear language rewrites from links to home or current page
        if (index == 0) {
          newHref = '/';
        }
        // Remove lang query string from all other links
        if (index > 0) {
          newHref = href.split('?')[0];
        }

        el.setAttribute('href', newHref);
      }
    });
  }

  function insertDate() {
    var pageLocale = getPageLocale();

    var dateElement = document.querySelector('.blog-index__event--date');
    if (dateElement) {
      var dateAttr = dateElement.getAttribute('data-date');
      var unformatted = new Date(dateAttr * 1);
      var options = {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      };
      var dateFormatted = unformatted.toLocaleDateString(pageLocale, options);
      dateElement.insertAdjacentText('beforeend', dateFormatted);
    }
  }

  // Use page lang to format date according to user's region
  function getPageLocale() {
    var pageLang = document.documentElement.lang;
    if (pageLang.includes('-')) {
      pageLang = pageLang.split('-')[0];
    }
    var locale;
    switch (pageLang) {
      case 'en':
        locale = 'en-UK';
        break;
      case 'sv':
        locale = 'sv-SV';
        break;
      case 'de':
        locale = 'de-DE';
        break;
      case 'pl':
        locale = 'pl-PL';
        break;
      default:
        locale = 'en-UK';
    }
    return locale;
  }

  // Insert date into DOM
  document.addEventListener('DOMContentLoaded', insertDate);

  document.addEventListener('DOMContentLoaded', skipLangUrlRewrite);
  document.addEventListener('DOMContentLoaded', removeExtraLangSwitcher);

  // Execute JavaScript on document ready
  domReady(function () {
    if (!document.body) {
      return;
    } else {
      // Function dependent on mobile language switcher
      if (window.innerWidth <= 767 && mobileLangSwitcher) {
        mobileLangToggle.addEventListener('click', toggleMobileLang);
      }

      if (window.innerWidth > 767 && langSwitcher) {
        langToggle.addEventListener('click', toggleLang);
      }

      // Function dependent on navigation
      if (navToggle) {
        navToggle.addEventListener('click', toggleNav);
      }

      // Function dependent on search field
      if (searchToggle) {
        searchToggle.addEventListener('click', toggleSearch);
      }

      // Function dependent on close toggle
      if (closeToggle) {
        closeToggle.addEventListener('click', closeAll);
      }

      // Function dependent on email unsubscribe from all input
      if (emailGlobalUnsub) {
        emailGlobalUnsub.addEventListener('change', toggleDisabled);
      }

      // Add keydown listener
      window.addEventListener('keydown', handleFirstTab);

      // Add scroll event listener for header transform
      document.addEventListener('scroll', toggleScrollClass);
      document.addEventListener('DOMContentLoaded', toggleScrollClass);
    }
  });
})();
